# warunek początkowy 
x0 = 1
# tu można wstawić dowolną funkcję f(x)
f(x) = x - 0.5*x*x+1.7
for i in range(20):
    print x0
    x0 = f(x0)
    
def ne(b,X):
    return X - b*X*X +1.7
#
def pophis(startp,b,length):
    his = [startp]
    for i in range(length):
        his.append( ne(b,his[i]) )
    return his
#
#warunek pocz. przed b, 
#po b ilość iteracji, 
#skala wykresu podana w ymin, ymax
@interact
def _(b=slider(0.05,3,0.05,default=0.5,label='Factor b')):
    show(list_plot(pophis(1,b,35),plotjoined=True,marker='o',ymin=0.5,ymax=3))
    
    
    
